// Abstract class Shape
abstract class Shape {
    // Abstract method calculateArea() to be implemented by subclasses
    public abstract void calculateArea();
}

// Rectangle class that extends Shape
class Rectangle extends Shape {
    private double length;
    private double width;

    // Constructor for Rectangle
    public Rectangle(double length, double width) {
        this.length = length;
        this.width = width;
    }

    // Override the calculateArea() method for Rectangle
    @Override
    public void calculateArea() {
        double area = length * width;
        System.out.println("Area of Rectangle: " + area);
    }
}

// Circle class that extends Shape
class Circle extends Shape {
    private double radius;

    // Constructor for Circle
    public Circle(double radius) {
        this.radius = radius;
    }

    // Override the calculateArea() method for Circle
    @Override
    public void calculateArea() {
        double area = Math.PI * radius * radius;
        System.out.println("Area of Circle: " + area);
    }
}

// Main class to test the functionality
public class Main {
    public static void main(String[] args) {
        // Create Rectangle and Circle objects
        Shape rectangle = new Rectangle(5.0, 3.0);
        Shape circle = new Circle(4.0);

        // Test the calculateArea() methods
        rectangle.calculateArea();
        circle.calculateArea();
    }
}
